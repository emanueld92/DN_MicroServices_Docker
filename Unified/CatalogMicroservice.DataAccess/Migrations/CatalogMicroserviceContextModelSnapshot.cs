// <auto-generated />
using CatalogMicroservice.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CatalogMicroservice.DataAccess.Migrations
{
    [DbContext(typeof(CatalogMicroserviceContext))]
    partial class CatalogMicroserviceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("CatalogMicroservice.Core.Entity.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CatalogMicroservice.Core.Entity.Make", b =>
                {
                    b.Property<int>("IdMake")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MakeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdMake");

                    b.ToTable("Makes");
                });

            modelBuilder.Entity("CatalogMicroservice.Core.Entity.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryIdCategory")
                        .HasColumnType("int");

                    b.Property<int>("MakeIdMake")
                        .HasColumnType("int");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdProduct");

                    b.HasIndex("CategoryIdCategory");

                    b.HasIndex("MakeIdMake");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CatalogMicroservice.Core.Entity.Product", b =>
                {
                    b.HasOne("CatalogMicroservice.Core.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryIdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CatalogMicroservice.Core.Entity.Make", "Make")
                        .WithMany("Products")
                        .HasForeignKey("MakeIdMake")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Make");
                });

            modelBuilder.Entity("CatalogMicroservice.Core.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CatalogMicroservice.Core.Entity.Make", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
