// <auto-generated />
using System;
using MicroservicioVentas.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroservicioVentas.EntityFramework.Migrations
{
    [DbContext(typeof(MicroservicioVentasDataContext))]
    [Migration("20220306040155_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("MicroservicioVentas.Core.Sellers.SaleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("saleProducts");
                });

            modelBuilder.Entity("MicroservicioVentas.Core.Sellers.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("saleProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("saleProductId");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("MicroservicioVentas.Core.Sellers.Seller", b =>
                {
                    b.HasOne("MicroservicioVentas.Core.Sellers.SaleProduct", "saleProduct")
                        .WithMany("Seller")
                        .HasForeignKey("saleProductId");

                    b.Navigation("saleProduct");
                });

            modelBuilder.Entity("MicroservicioVentas.Core.Sellers.SaleProduct", b =>
                {
                    b.Navigation("Seller");
                });
#pragma warning restore 612, 618
        }
    }
}
